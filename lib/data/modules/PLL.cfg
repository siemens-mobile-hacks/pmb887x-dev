.id 0x1
.type NATIVE
.size 0x200
.name PLL
.descr Looks like a CGU module, registers collected using tests on real hardware (using "black box" method).

.irq

OSC		0x0A0
	LOCK	0	1
	NDIV	16	3	Feedback divider (multiply by N+1)

CON0	0x0A4
	PLL1_K2		0	3	div by (K1 * 6 + (K2 - 1))
	PLL1_K1		3	4
	
	PLL2_K2		8	3	div by (K1 * 6 + (K2 - 1))
	PLL2_K1		11	4
	
	PLL3_K2		16	3	div by (K1 * 6 + (K2 - 1))
	PLL3_K1		19	4
	
	PLL4_K2		24	3	div by (K1 * 6 + (K2 - 1))
	PLL4_K1		27	4

CON1	0x0A8
	FSYS_CLKSEL			16	2	Source clock for fSYS (BYPASS: fSYS=fOSC, PLL: fSYS=fPLL / 2)
		BYPASS=0
		PLL=2
		DISABLE=3
	
	AHB_CLKSEL			20	3	Source clock for fPLL
		BYPASS=0
		PLL0=2
		PLL1=3
		PLL2=4
		PLL3=5
		PLL4=6
	
	FSTM_DIV_EN			25	1	Enable fSTM divider
	FSTM_DIV			28	2	fSTM divider value (n^2)
		1=0
		2=1
		4=2
		8=3
	
CON2	0x0AC
	CPU_DIV				8	2
	CPU_DIV_EN			12	1
	CLK32_EN			24	1

STAT	0x0B0
	LOCK				13	1

CON3	0x0B4
SRC		0x0CC
	*MOD_SRC
